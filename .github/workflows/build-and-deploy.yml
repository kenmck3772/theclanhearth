name: Build & Deploy (Tailwind + Cache Bust + Sitemap)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: "pages"
  cancel-in-progress: true

permissions:
  contents: write        # commit built css/style.css back to main
  pages: write           # deploy to GitHub Pages
  id-token: write        # required by actions/deploy-pages

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install deps
        run: npm install

      - name: Build Tailwind
        run: npm run build

      # Keep repo clean with a built css/style.css on main (not hashed)
      - name: Commit built CSS back to main
        if: ${{ github.actor != 'github-actions[bot]' }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add css/style.css
            git commit -m "Build Tailwind CSS"
            git push
          fi

      # Stage site for deployment to dist/
      - name: Stage site to dist/
        run: |
          mkdir -p dist
          rsync -av \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'node_modules' \
            ./ dist/

      # Cache-bust CSS in dist only
      - name: Cache-bust CSS in dist
        shell: bash
        run: |
          set -e
          if [ ! -f dist/css/style.css ]; then
            echo "dist/css/style.css not found (build must create it)"; exit 1
          fi
          HASH=$(sha256sum dist/css/style.css | cut -c1-10)
          NEW="style.${HASH}.css"
          mv "dist/css/style.css" "dist/css/${NEW}"
          grep -rl --include="*.html" "css/style.css" dist | xargs -r sed -i "s|css/style.css|css/${NEW}|g"
          echo "Hashed CSS => ${NEW}"

      # Generate sitemap.xml + robots.txt based on CNAME or repo path
      - name: Generate sitemap + robots
        shell: bash
        run: |
          set -e
          if [ -f CNAME ]; then
            BASE="https://$(cat CNAME)"
          else
            REPO="${{ github.event.repository.name }}"
            OWNER="${{ github.repository_owner }}"
            BASE="https://${OWNER}.github.io/${REPO}"
          fi

          TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          cat > dist/sitemap.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>${BASE}/</loc>
    <lastmod>${TS}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>1.0</priority>
  </url>
  <url>
    <loc>${BASE}/index.html</loc>
    <lastmod>${TS}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.9</priority>
  </url>
</urlset>
EOF

          cat > dist/robots.txt <<EOF
User-agent: *
Allow: /
Sitemap: ${BASE}/sitemap.xml
EOF

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
